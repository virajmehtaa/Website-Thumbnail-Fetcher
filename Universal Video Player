<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Universal Video Player with Download</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
            color: #333;
        }

        .container {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        h1 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
        }

        .input-section {
            display: flex;
            margin-bottom: 20px;
        }

        #url-input {
            flex-grow: 1;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 4px 0 0 4px;
            font-size: 16px;
        }

        #load-button {
            padding: 12px 24px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 0 4px 4px 0;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }

        #load-button:hover {
            background-color: #2980b9;
        }

        .player-container {
            width: 100%;
            margin-bottom: 20px;
            display: none;
        }

        video {
            width: 100%;
            border-radius: 4px;
            background-color: #000;
        }

        .controls {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .download-btn {
            padding: 10px 20px;
            background-color: #2ecc71;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
            display: none;
        }

        .download-btn:hover {
            background-color: #27ae60;
        }

        .error-message {
            color: #e74c3c;
            margin-top: 20px;
            text-align: center;
            display: none;
        }

        .instructions {
            margin-top: 30px;
            padding: 15px;
            background-color: #f8f9fa;
            border-left: 4px solid #3498db;
            border-radius: 4px;
        }

        .footer {
            margin-top: 40px;
            text-align: center;
            color: #7f8c8d;
            font-size: 14px;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Universal Video Player</h1>

        <div class="input-section">
            <input type="text" id="url-input" placeholder="Paste video URL or website link containing video...">
            <button id="load-button">Load Video</button>
        </div>

        <div class="player-container" id="player-container">
            <video id="video-player" controls></video>
        </div>

        <div class="controls">
            <button class="download-btn" id="download-btn">Download Video</button>
        </div>

        <div class="error-message" id="error-message">
            Unable to extract video from the provided URL. Please make sure it contains a direct video link.
        </div>

        <div class="instructions">
            <h3>How to use:</h3>
            <p>1. Paste a URL that contains a video (YouTube, Vimeo, etc.) or a direct video link (.mp4, .webm, etc.)
            </p>
            <p>2. Click "Load Video" to extract and play the video</p>
            <p>3. Use the "Download Video" button to save the video to your device (when available)</p>
            <p><strong>Note:</strong> Due to website security restrictions (CORS policies), some websites may not allow
                their videos to be embedded or downloaded.</p>
        </div>
    </div>

    <div class="footer">
        <p>Â© 2025 Universal Video Player | Created for personal use only</p>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const urlInput = document.getElementById('url-input');
            const loadButton = document.getElementById('load-button');
            const videoPlayer = document.getElementById('video-player');
            const playerContainer = document.getElementById('player-container');
            const downloadBtn = document.getElementById('download-btn');
            const errorMessage = document.getElementById('error-message');

            loadButton.addEventListener('click', function () {
                const url = urlInput.value.trim();
                if (!url) return;

                // Reset UI
                errorMessage.style.display = 'none';
                downloadBtn.style.display = 'none';

                // Try to determine if it's a direct video URL or a website
                if (isDirectVideoUrl(url)) {
                    loadDirectVideo(url);
                } else {
                    attemptToExtractVideo(url);
                }
            });

            downloadBtn.addEventListener('click', function () {
                if (videoPlayer.src) {
                    // Create a temporary anchor to trigger download
                    const a = document.createElement('a');
                    a.href = videoPlayer.src;
                    a.download = 'video-' + Date.now() + getFileExtension(videoPlayer.src);
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                }
            });

            function isDirectVideoUrl(url) {
                const videoExtensions = ['.mp4', '.webm', '.ogg', '.mov'];
                return videoExtensions.some(ext => url.toLowerCase().includes(ext));
            }

            function getFileExtension(url) {
                const videoExtensions = ['.mp4', '.webm', '.ogg', '.mov'];
                for (const ext of videoExtensions) {
                    if (url.toLowerCase().includes(ext)) {
                        return ext;
                    }
                }
                return '.mp4'; // Default extension
            }

            function loadDirectVideo(url) {
                videoPlayer.src = url;
                playerContainer.style.display = 'block';
                downloadBtn.style.display = 'block';

                videoPlayer.addEventListener('error', function () {
                    errorMessage.style.display = 'block';
                    playerContainer.style.display = 'none';
                    downloadBtn.style.display = 'none';
                });
            }

            function attemptToExtractVideo(url) {
                // This is a simplified approach - extracting videos from websites usually requires:
                // 1. Server-side processing (due to CORS policies)
                // 2. Site-specific extraction methods

                // For demonstration, we'll try to handle YouTube URLs
                if (url.includes('youtube.com') || url.includes('youtu.be')) {
                    const videoId = extractYouTubeId(url);
                    if (videoId) {
                        // Note: Direct embedding works, but download won't work for YouTube due to their policies
                        // We replace the player with an iframe in this case
                        playerContainer.innerHTML = `<iframe width="100%" height="500" 
                            src="https://www.youtube.com/embed/${videoId}" 
                            frameborder="0" allowfullscreen></iframe>`;
                        playerContainer.style.display = 'block';
                        // Can't offer direct download for YouTube
                        errorMessage.textContent = "YouTube videos cannot be downloaded directly due to their terms of service.";
                        errorMessage.style.display = 'block';
                        return;
                    }
                }

                // For other websites, we would need a server-side proxy to bypass CORS
                // For this demo, we'll just show an error message
                errorMessage.textContent = "Unable to extract video from this URL. Please try a direct video link instead.";
                errorMessage.style.display = 'block';
            }

            function extractYouTubeId(url) {
                const regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
                const match = url.match(regExp);
                return (match && match[7].length === 11) ? match[7] : false;
            }

            // Handle Enter key press
            urlInput.addEventListener('keypress', function (e) {
                if (e.key === 'Enter') {
                    loadButton.click();
                }
            });
        });
    </script>
</body>

</html>

Universal Video Player ðŸ‘† ok
